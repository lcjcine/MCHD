# Iniciando o Projeto - comandos iniciais (%matplotlib inline) (import) (pd)
%matplotlib inline
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
plt.style.use('ggplot')

# Carregar o dataset na memória
# Leitura do arquivo (dataset)
videogames = pd.read_csv ('vgsales.csv')

outro:
# Ambos os códigos fazem a mesma coisa:
CÓDIGO 1: (armazenar a leitura do dataset dentro de uma variável.)
videogames = pd.read_csv ('nome_do_arquivo')
videogames.read() # SEMPRE QUE PRECISARMOS USAR O READ, PODEMOS DIGITAR SOMENTE ESSA LINHA
CÓDIGO 2: (sempre que precisássemos utilizar a função head()do pandas, tivéssemos que digitar o código 2)
pd.read_csv('nome_do_arquivo').head()

#Exibir as linhas da tabela
# Exibindo as 10 primeiras linhas do dataframe. videogame é a string que está o dataset.
videogames.head(10)

# Resumo das Informações das Colunas (describe())
# Resumo das informações em todas as colunas — ou colunas da tabela — numéricas em nosso dataset.
videogames.describe()

# Tipo de Dados (dtypes)
# Tipo de dado em cada coluna
videogames.dtypes

# tamanho do dataset (shape)
# Quantidade de linhas e colunas no dataset
videogames.shape

# Renomeando colunas com o pandas (columns)
# renomeando Colunas
videogames.columns = ['Ranking', 'Nome', 'Plataforma', 'Ano', 'Gênero', 'Editora', 'Vendas América do Norte', 'Vendas Europa', 'Vendas Japão', 'Outras Vendas', 'Vendas Global']

# Exibindo as 10 primeiras linhas do arquivo
videogames.head (10)

# Tratando valores nulos
# Verificando linhas onde não números lançados. Todos os dados mostrados abaixo estão sem o ano de lançamento.
videogames[videogames['Ano'].isnull()].head(10)

# A função (value_counts)
videogames['Plataforma'].value_counts()

# Criando gráficos com pandas - usando (value_counts)
titulos_lancados = videogames['Plataforma'].value_counts()
titulos_lancados.plot()
videogames['Plataforma'].value_counts().plot()

# Melhorando a aparência do Gráfico
# Criando um gráfico utilizando apenas uma linha de código
videogames['Plataforma'].value_counts().head(10).plot(kind='bar', figsize=(11,5), grid=False, rot=0, color='green')

# enfeitando o gráfico abaixo e definindo um título
plt.title('Os 10 Videogames com mais títulos lançados')
plt.xlabel('Videogame') # Nomeando o eixo x onde ficam os nomes dos videogames
plt.ylabel('Quantidde de Jogos Lançados') # Nomenado o eixo y
plt.show() # Exibindo o gráfico

# Outro Gráfico
# Os 10 jogos mais vendidos da história
top_10_vendidos = videogames[['Nome', 'Vendas Global']].head(10).set_index('Nome').sort_values('Vendas Global', ascending=True)
top_10_vendidos.plot(kind='barh', figsize=(11,7), grid=False, color='darkred', legend=False)

plt.title('Os 10 Jogos mais vendidos do mundo')
plt.xlabel('Total de Vendas (em Milhões de Dólares)')
plt.show()

# Criando um mapa de calor
crosstab_vg = pd.crosstab(videogames['Plataforma'], videogames['Gênero'])
crosstab_vg.head()

# Add coluna Total no dataframe
crosstab_vg['Total']= crosstab_vg.sum(axis=1)
crosstab_vg.head()

# Criando um hitmap
top10_platforms = crosstab_vg[crosstab_vg['Total'] > 1000].sort_values('Total', ascending = False)
top10_final = top10_platforms.append(pd.DataFrame(top10_platforms.sum(), columns=['total']).T, ignore_index=False)

sns.set(font_scale=1)
plt.figure(figsize=(18, 9))
sns.heatmap(top10_final, annot=True, vmax=top10_final.loc[:'PS', :'Strategy'].values.max(), vmin=top10_final.loc[:, :'Strategy'].values.min(), fmt='d')

plt.xlabel('GÊNERO')
plt.ylabel('CONSOLE')
plt.title('QUANTIDADE DE TÍTULOS POR GÊNERO E CONSOLE')
plt.show()
